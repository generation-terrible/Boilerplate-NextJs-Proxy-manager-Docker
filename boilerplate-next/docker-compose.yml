services:
  nextjs:
    build:
      context: .
      dockerfile: $DOCKERFILE
    ports:
      - 3000:3000
      - 5555:5555
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - pnpm_store:/app/.pnpm-store
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - AUTH_URL=${APP_URL}
      - AUTH_SECRET=${AUTH_SECRET}
    networks:
      - ${PROXY_NETWORK_NAME}
    container_name: boilerplate_nextjs_dev

  postgres:
    image: postgres:17
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    networks:
      - ${PROXY_NETWORK_NAME}
    container_name: boilerplate_postgres_dev

  playwright:
    build:
      context: .
      dockerfile: Dockerfile.playwright
    volumes:
      - .:/app
    working_dir: /app
    ports:
      - 9323:9323
    depends_on:
      - nextjs
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - ${PROXY_NETWORK_NAME}
    command: tail -f /dev/null
    container_name: boilerplate_playwright_dev

volumes:
  postgres_data:
  pnpm_store:

networks:
  boilerplate-proxy:
    external: true
